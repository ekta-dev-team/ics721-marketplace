{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "This is like Cw721HandleMsg but we add a Mint command for an owner to make this stand-alone. You will likely want to remove mint and use other control logic in any contract that inherits this.",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "receive_nft"
      ],
      "properties": {
        "receive_nft": {
          "$ref": "#/definitions/Cw721ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_auction"
      ],
      "properties": {
        "cancel_auction": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "place_bid"
      ],
      "properties": {
        "place_bid": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "settle"
      ],
      "properties": {
        "settle": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "admin_change_config"
      ],
      "properties": {
        "admin_change_config": {
          "type": "object",
          "required": [
            "accepted_denom",
            "collector_address",
            "duration",
            "extension_duration",
            "max_royalty_fee",
            "min_increment",
            "min_reserve_price",
            "protocol_fee"
          ],
          "properties": {
            "accepted_denom": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "collector_address": {
              "type": "string"
            },
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "extension_duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "max_royalty_fee": {
              "$ref": "#/definitions/Decimal"
            },
            "min_increment": {
              "$ref": "#/definitions/Decimal"
            },
            "min_reserve_price": {
              "$ref": "#/definitions/Uint128"
            },
            "protocol_fee": {
              "$ref": "#/definitions/Decimal"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "admin_cancel_auction"
      ],
      "properties": {
        "admin_cancel_auction": {
          "type": "object",
          "required": [
            "auction_id"
          ],
          "properties": {
            "auction_id": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_royalty_fee"
      ],
      "properties": {
        "set_royalty_fee": {
          "type": "object",
          "required": [
            "contract_addr",
            "creator",
            "royalty_fee"
          ],
          "properties": {
            "contract_addr": {
              "type": "string"
            },
            "creator": {
              "type": "string"
            },
            "royalty_fee": {
              "$ref": "#/definitions/Decimal"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_royalty_admin"
      ],
      "properties": {
        "set_royalty_admin": {
          "type": "object",
          "required": [
            "address",
            "enable"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "enable": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "admin_pause"
      ],
      "properties": {
        "admin_pause": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "admin_resume"
      ],
      "properties": {
        "admin_resume": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "settle_hook"
      ],
      "properties": {
        "settle_hook": {
          "type": "object",
          "required": [
            "nft_contract",
            "owner",
            "token_id"
          ],
          "properties": {
            "nft_contract": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "Cw721ReceiveMsg": {
      "description": "Cw721ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "msg",
        "sender",
        "token_id"
      ],
      "properties": {
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
